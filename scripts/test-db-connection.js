const { Pool } = require('pg');
require('dotenv').config();

// Configuration de la base de donn√©es
const pool = new Pool({
  host: process.env.DB_HOST || 'localhost',
  port: process.env.DB_PORT || 5432,
  database: process.env.DB_NAME || 'bms_db',
  user: process.env.DB_USER || 'postgres',
  password: process.env.DB_PASSWORD || 'password',
});

async function testConnection() {
  try {
    console.log('üîç Test de connexion √† la base de donn√©es...');
    console.log('üìã Configuration:');
    console.log(`  - Host: ${process.env.DB_HOST || 'localhost'}`);
    console.log(`  - Port: ${process.env.DB_PORT || 5432}`);
    console.log(`  - Database: ${process.env.DB_NAME || 'bms_db'}`);
    console.log(`  - User: ${process.env.DB_USER || 'postgres'}`);
    console.log('');

    // Test de connexion
    const client = await pool.connect();
    console.log('‚úÖ Connexion r√©ussie !');

    // Test de requ√™te simple
    const result = await client.query('SELECT version()');
    console.log('üìä Version PostgreSQL:', result.rows[0].version);

    // V√©rifier si la table partenaires existe
    const tableCheck = await client.query(`
      SELECT EXISTS (
        SELECT FROM information_schema.tables 
        WHERE table_schema = 'public' 
        AND table_name = 'partenaires'
      );
    `);

    if (tableCheck.rows[0].exists) {
      console.log('‚úÖ Table "partenaires" existe');
      
      // Compter les enregistrements
      const countResult = await client.query('SELECT COUNT(*) FROM partenaires');
      console.log(`üìä Nombre de partenaires: ${countResult.rows[0].count}`);
    } else {
      console.log('‚ùå Table "partenaires" n\'existe pas');
      console.log('üí° Ex√©cutez d\'abord: \\i scripts/create-partenariat-table.sql');
    }

    client.release();
    console.log('\nüéâ Test de connexion termin√© avec succ√®s !');

  } catch (error) {
    console.error('‚ùå Erreur de connexion:', error.message);
    
    if (error.code === 'ECONNREFUSED') {
      console.log('\nüí° Solutions possibles:');
      console.log('  1. V√©rifiez que PostgreSQL est d√©marr√©');
      console.log('  2. V√©rifiez le port (d√©faut: 5432)');
      console.log('  3. V√©rifiez que le service PostgreSQL est actif');
    } else if (error.code === '28P01') {
      console.log('\nüí° Erreur d\'authentification:');
      console.log('  1. V√©rifiez le nom d\'utilisateur et mot de passe');
      console.log('  2. V√©rifiez le fichier .env');
    } else if (error.code === '3D000') {
      console.log('\nüí° Base de donn√©es introuvable:');
      console.log('  1. V√©rifiez le nom de la base de donn√©es');
      console.log('  2. Cr√©ez la base si elle n\'existe pas');
    }
  } finally {
    await pool.end();
  }
}

// Ex√©cuter le test
testConnection();
